##########################################################
##########################################################
-- Guided Project: Mastering SQL Joins in PostgreSQL
##########################################################
##########################################################


#############################
-- Task One: Getting Started
-- In this task, we will retrieve data from the dept_manager_dup and
-- departments_dup tables in the database
#############################

-- 1.1: Retrieve all data from the dept_manager_dup table
SELECT * 
FROM DEPT_MANAGER_DUP
ORDER BY DEPT_NO;

-- 1.2: Retrieve all data from the departments_dup table
SELECT *
FROM DEPARTMENTS_DUP
ORDER BY DEPT_NO;

#############################
-- Task Two: INNER JOIN
-- In this task, you will retrieve data from the two 
-- tables using INNER JOIN
#############################

##########
-- INNER JOIN

-- 2.1: Extract all managers' employees number, department number, 
-- and department name. Order by the manager's department number
SELECT M.EMP_NO,M.DEPT_NO,D.DEPT_NAME
FROM DEPT_MANAGER_DUP AS M
INNER JOIN DEPARTMENTS_DUP AS D
ON M.DEPT_NO = D.DEPT_NO
ORDER BY M.DEPT_NO;


-- add m.from_date and m.to_date
SELECT M.EMP_NO,M.DEPT_NO,D.DEPT_NAME,M.FROM_DATE,M.TO_DATE
FROM DEPT_MANAGER_DUP AS M
INNER JOIN DEPARTMENTS_DUP AS D
ON M.DEPT_NO = D.DEPT_NO
ORDER BY M.DEPT_NO;


-- 2.2 (Ex.): Extract a list containing information about all managers'
-- employee number, first and last name, dept_number and hire_date
-- Hint: Use the employees and dept_manager tables

-- Retrieve data from the employees and dept_manager

SELECT * FROM employees;
SELECT * FROM dept_manager;

-- Solution to 2.2
SELECT M.EMP_NO,E.FIRST_NAME,E.LAST_NAME,M.DEPT_NO,E.HIRE_DATE
FROM DEPT_MANAGER AS M
INNER JOIN EMPLOYEES AS E
ON M.EMP_NO = E.EMP_NO;

#############################
-- Task Three: Duplicate Records
-- In this task, you will retrieve data from the two 
-- tables with duplicate records using INNER JOIN
#############################

###########
-- Duplicate Records

-- 3.1: Let us add some duplicate records
-- Insert records into the dept_manager_dup and departments_dup tables respectively

INSERT INTO dept_manager_dup 
VALUES 	('110228', 'd003', '1992-03-21', '9999-01-01');
        
INSERT INTO departments_dup 
VALUES	('d009', 'Customer Service');

-- 3.2: Select all records from the dept_manager_dup table

SELECT *
FROM dept_manager_dup
ORDER BY dept_no ASC;

-- 3.3: Select all records from the departments_dup table

SELECT *
FROM departments_dup
ORDER BY dept_no ASC;

-- 3.4: Perform INNER JOIN as before
SELECT M.EMP_NO,M.DEPT_NO,D.DEPT_NAME
FROM DEPT_MANAGER_DUP AS M
INNER JOIN DEPARTMENTS_DUP AS D
ON M.DEPT_NO = D.DEPT_NO
ORDER BY M.DEPT_NO;

-- 3.5: add a GROUP BY clause. Make sure to include all the fields in the GROUP BY clause
SELECT M.EMP_NO,M.DEPT_NO,D.DEPT_NAME
FROM DEPT_MANAGER_DUP AS M
INNER JOIN DEPARTMENTS_DUP AS D
ON M.DEPT_NO = D.DEPT_NO
GROUP BY M.EMP_NO,M.DEPT_NO,D.DEPT_NAME
ORDER BY M.DEPT_NO;


#############################
-- Task Four: LEFT JOIN
-- In this task, you will retrieve data from the two tables using LEFT JOIN
#############################

###########
-- LEFT JOIN

-- 4.1: Remove the duplicates from the two tables
DELETE FROM dept_manager_dup 
WHERE emp_no = '110228';
        
DELETE FROM departments_dup 
WHERE dept_no = 'd009';

-- 4.2: Add back the initial records
INSERT INTO dept_manager_dup 
VALUES 	('110228', 'd003', '1992-03-21', '9999-01-01');
        
INSERT INTO departments_dup 
VALUES	('d009', 'Customer Service');

-- 4.3: Select all records from dept_manager_dup
SELECT *
FROM dept_manager_dup
ORDER BY dept_no;

-- 4.4: Select all records from departments_dup
SELECT *
FROM departments_dup
ORDER BY dept_no;

-- Recall, when we had INNER JOIN
SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY m.dept_no;

-- 4.5: Join the dept_manager_dup and departments_dup tables
-- Extract a subset of all managers' employee number, department number, 
-- and department name. Order by the managers' department number

SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
LEFT JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY m.dept_no;

-- 4.6: What will happen when we d LEFT JOIN m?
#TABLES WILL BE INTERCHANGED, D WILL BE THE LEFT TABLE NOW AND M THE RIGHT TABLE
SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
LEFT JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY m.dept_no;

#############################
-- Task Five: RIGHT JOIN
-- In this task, you will retrieve data from the two tables using RIGHT JOIN
#############################

###########
-- RIGHT JOIN
SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
RIGHT JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY m.dept_no;
-- We have seen LEFT JOIN in the previous task

SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
LEFT JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY dept_no;

-- 5.1: Let's use RIGHT JOIN
SELECT m.dept_no, m.emp_no, d.dept_name
FROM dept_manager_dup m
RIGHT JOIN departments_dup d 
ON m.dept_no = d.dept_no
ORDER BY dept_no;


#############################
-- Task Six: JOIN and WHERE Used Together
-- In this task, you will retrieve data from tables
-- using JOIN and WHERE together
#############################

###########
-- JOIN and WHERE Used Together

-- 6.1: Extract the employee number, first name, last name and salary
-- of all employees who earn above 145000 dollars per year

-- Let us retrieve all data in the salaries table
SELECT * FROM salaries;

-- Solution to 6.1
SELECT e.emp_no,e.first_name, e.last_name, s.salary
FROM employees e
JOIN salaries s 
ON e.emp_no = s.emp_no
WHERE s.salary > 145000;


-- 6.2: What do you think will be the output of this query?

SELECT e.first_name, e.last_name, s.salary
FROM employees e
JOIN salaries s 
ON e.emp_no = s.emp_no
WHERE s.salary > 145000;

-- 6.3 (Ex.): Select the first and last name, the hire date and the salary
-- of all employees whose first name is 'Mario' and last_name is 'Straney'
SELECT e.emp_no,e.first_name, e.last_name, s.salary
FROM employees e
JOIN salaries s 
ON e.emp_no = s.emp_no
WHERE first_name ='Mario' and last_name='Straney'
ORDER BY e.emp_no;
